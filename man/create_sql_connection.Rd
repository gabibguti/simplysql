% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_sql_connection.R
\name{create_sql_connection}
\alias{create_sql_connection}
\title{Create and store a new SQL connection non-interactively}
\usage{
create_sql_connection(alias, drv, ...)
}
\arguments{
\item{alias}{string identifying the desired SQL connection.}

\item{drv}{an object that inherits from \linkS4class{DBIDriver},
or an existing \linkS4class{DBIConnection}
object (in order to clone an existing connection).}

\item{...}{
  Arguments passed on to \code{\link[DBI:dbConnect]{DBI::dbConnect}}
  \describe{
    \item{\code{}}{}
  }}
}
\value{
\code{NULL}, invisibly.
}
\description{
This function allows for the non-interactive definition of an SQL connection.
It'll likely be more common to define connections interactively via
\code{start_sql_connection}.
}
\details{
A call to this function should be identical to the equivalent
\code{DBI::dbConnect()} call, only with an additional \code{alias} argument.

Arguments are securely saved to the system's credential store. Type
information is also saved, ensuring that the resulting call is identical to
the equivalent \code{DBI::dbConnect()} call.

All arguments must be named and must include argument \code{drv}. \code{drv}'s value
must be fully namespaced (i.e. \code{odbc::odbc()}, not \code{odbc()}).
}
\seealso{
Other connection management functions: 
\code{\link{delete_sql_connection}()},
\code{\link{start_sql_connection}()}
}
\concept{connection management functions}
